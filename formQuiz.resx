<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CloseButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DQAACw0B7QfALAAAAaZJREFUaEPtmd1KxDAUhAv6EIp67YPrhX/ojfhUKuoL6Axs4BCmaaZ/WSEffBe7
        nM6edNOk3R06nU7nqLmCT/AH/u4sP/MFXsNZsPkPqML39BOyFxueeRXYwgdo02LajPkNbVRQS21USEtt
        VEhLbVRIS21USPQNXh7keq1qSvKYc3gGXw/vlbRRIVE2njiFd1DVKVnLYxLMUnVRGxUSjQMgtYPImyfc
        qFRt1EaFRDkF8kamBqGa5+uaKWijQnIfYd7QCbyBeS13U1V7C/NapY0KUdYMYmnz1EaFjFkaxBrNUxsV
        UnJsfqv3ai72XBsVMqX6JiJzznzSRoXUODaIJc1TGxVSo5rzJF0T6pgabVTIlGPNJ5YMwkaFlPzXF3Fp
        qXQ2u5I2KkRZs86vMQgbFZLrbFJLB2GjQqJr3sw9Q1UftVEh0TVvpy+gqo3aqJDomg80TQaQHin5MDL3
        kZLHU2apmqiNCmmpjQppqY0KaamNCmmpzTH9uPsFbeasLFt5D234zwj/XFCBe/oO802zGq7xvN/h7/Mq
        fEv5mTzzs5vvdDqdrRmGP4p4QAE0zh0KAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="MinimizeButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DQAACw0B7QfALAAAAQRJREFUaEPtmUFKBDEUBfse6tqzK8JsRC+lol5gfH9fLqpl+o2QgtpWkiZ0INkW
        i8XiqrmLT/E7ng92xjzF+7iLmfx7pPiRfsSZi2a+PAUbPkZNY9v85lfUUKiphiJNNRRpqqFIUw1Fmmoo
        0lRDkaYaijTVUKSphiJNNRRpqqFIUw1Fmmoo0lRDkaYaijTVUKSphiJNNRRpqqFIUw1FyOd4Ey238SVS
        k9RQhJyJ7GXue6hJaihC/vsFzDbYs4iZ/GukJqmhSFMNRZpqKNJUQ5Gmmmu63P2MmnlcoFjDh6iZl5F5
        XKDgkb7F3WfN/KvncWHu5yl+SWfM+fJ/OSgXi8XiomzbDwt9wNyLbF9HAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCX
        IQDumCAB8ZYiF/OWIDbyliBL8pUgVfKVIFXyliBL85YgNvOWIBf4lCIB9ZUhAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOW
        HgDylR4I85YfOPKWIIjzliHA85Yh3vOWIfTzliH+85Yh/vOWIfTzliHe85Yhv/KVIIfzlSA38pUgCPOU
        HwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOX
        IADzmSAB85YgLvOWIZXyliDo85Yh/fOWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh/fKV
        IejzliGU8pUgLvKSIwHylCEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD1kyQA9pIlBfOVIFTzliHR85Yh/vOWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf7zliHQ8pYhUvaSJQX1kyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9JUgAPWUHwPzliFm85Yh5/OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliD/85Yg//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHm85UhZvWRHwP0lCAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPOWHgDzlgQA85YhU/OWIeXzliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85gl//Sh
        OP/0njH/85cj//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHm8pYhUv++IQDxkSEAAAAAAAAA
        AAAAAAAAAAAAAAAAAADvnRoA9JQhAPOWIC/zliHR85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OX
        I//3vHH//OfN//vfu//1qkv/85Uf//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHR85UgLvOW
        IwDxkhgAAAAAAAAAAAAAAAAAAAAAAPOVIADzlB8H85YhlvOWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliD/9Jsr//rYq//99Of//fTn//i+dv/zlSD/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliGV8ZYfB/KWIAAAAAAAAAAAAAAAAAAAAAAA8pUgAPOUITnylSDp85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zmCX/98F7//zp0f/748T/9q5T//OVH//zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//KWIOjzlR848pYgAAAAAAAAAAAAAAAAAPSRFwDrsVQA8pYgiPOWIf7zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIP/zmir/9apL//WmQf/zlyT/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh/vKVIIjQuUoA+Y8ZAAAAAAAAAAAA8pYgAPKWIBjzliHA85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yi//WmQv/2tWL/9rFb//SeMf/zlSD/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yhv/OWIBfzliAAAAAAAAAAAADzliAA85YgNvOW
        Id/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliL/+MJ+//306P/87tr/9rFZ//OU
        Hf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHe85YhNfOWIQAAAAAAAAAAAPKW
        IADyliBL85Yh9POWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OVHv/3tmT//fDf//3y
        5P/5zZT/85oo//OWIP/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIfPyliBL8pYgAAAA
        AAAAAAAA8pUgAPKVIFXzliH+85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Uf//Si
        Ov/63LT//fPm//3u2v/4wn3/85kp//OWIP/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh/fKW
        IFXyliAAAAAAAAAAAADylSAA8pUgVfOWIf7zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//WsUP/74sH//fPm//zt2v/3wXv/85gk//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH98pYgVfKWIAAAAAAAAAAAAPKWIADyliBL85Yh9POWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zlR7/85Qd//OUHf/zlR//85Yh//avV//85cf//fPm//zp0P/1rVL/85Ug//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIfPyliBL8pYgAAAAAAAAAAAA85UhAPOVITfzliHf85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yg//WrTf/2t2b/9rVi//SiOv/zliD/85Yg//jGhP/98eH//fPk//jJjP/zlR//85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh3vOWITbzliEAAAAAAAAAAADylyAA8pcgGPOWIcDzliH/85Yh//OW
        If/zliH/85Yh//OWIf/zlR//+dCa//316P/98eH/+MB6//OUHv/zlB3/9752//3w3//99Of/+dCb//OV
        H//zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHA8ZchF/GXIQAAAAAAAAAAAPSTFwDrplMA8pYgifOW
        If7zliH/85Yh//OWIf/zliH/85Yh//OVH//3wHr//fHg//3z5f/737v/97Nf//axWP/627L//fPk//3x
        4v/4xIP/85Uf//OWIf/zliH/85Yh//OWIf/zliH/85Yh/vKVIYnraVsA9J4WAAAAAAAAAAAAAAAAAPKV
        IADzlSE58pUg6fOWIf/zliH/85Yh//OWIf/zliH/85Yg//SkPv/74b7//fPl//3z5f/87dj//OzX//3y
        5P/98+b//OXI//WoSP/zliD/85Yh//OWIf/zliH/85Yh//OWIf/yliDo85YfOfKWIAAAAAAAAAAAAAAA
        AAAAAAAA85YgAPOWHwjzliGX85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//WrT//61af//OrR//3x
        4v/98uP//OvV//rar//2sVr/85ci//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIZbxlB8H8pUgAAAA
        AAAAAAAAAAAAAAAAAADwkhgA9JciAPOWHzDzliHS85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yg//Sd
        L//1rFH/9rRh//a0Yv/2rlP/9J80//OWIP/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHR85YhL/OV
        HwDymigAAAAAAAAAAAAAAAAAAAAAAAAAAADzmSIA87wtAPOVIVXzliHn85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Ug//OVHv/zlB3/85Qd//OUHv/zlSD/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh5vOV
        IVTzrgwA85gfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzlSAA85UfBPOVIWjzliHn85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        IefzliBn9ZYcA/SWHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0lSQA9JUlBfOV
        IVbzliHT85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliHR85YhVPaSJQX1kyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADzliIA85kkAfOVITDzlSGY8pUg6fOWIf3zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If3ylSDp85YhlvOWIC/zkyAB85UgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA85UhAPOVIQnzliE58pUhifOWIcHzliHf85Yh9POWIf7zliH+85Yh9POW
        Id/zliHA8pYgifOUIDnzkyAJ85MhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPGYHwDwmh0B8pcgGPOWIDbzlSFM8pUgVvKV
        IFbyliBL85YgNvKVIBjwlx0B8ZYfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////4Af//4AB//4AAH/8AAA/+AAAH/gAAB/wAAAP4AAAB+AA
        AAfgAAAHwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPgAAAH4AAAB+AAAAfwAAAP+AAAH/gA
        AB/8AAA//gAAf/+AAf//4Af///////////8=
</value>
  </data>
</root>